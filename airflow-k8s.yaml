kind: Template
apiVersion: v1
metadata:
  name: airflow-k8s-template
parameters:
  - name: PROJECT_ID
    required: true
    parameterType: string
  - name: DOMAIN
    required: true
    parameterType: string
    value: airflow.donaldrauscher.com
  - name: FERNET_KEY
    required: true
    parameterType: string
  - name: DAG_REPO
    required: true
    parameterType: string
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config-airflow
    data:
      EXECUTOR: Celery
      POSTGRES_USER: airflow
      POSTGRES_DB: airflow
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      FLOWER_PORT: "5555"
      FERNET_KEY: "$(FERNET_KEY)"
      AIRFLOW__CORE__DAGS_FOLDER: "/git/git/dags/"
      AIRFLOW__CORE__PLUGINS_FOLDER: "/git/git/plugins/"
      AIRFLOW__CORE__LOAD_EXAMPLES: "0"
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: config-git-sync
    data:
      GIT_SYNC_REPO: "$(DAG_REPO)"
      GIT_SYNC_DEST: git
  - apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: ingress
      annotations:
        kubernetes.io/ingress.global-static-ip-name: airflow-static-ip
    spec:
      tls:
      - secretName: cloudiap
      rules:
      - host: web.$(DOMAIN)
        http:
          paths:
          - backend:
              serviceName: web
              servicePort: 8080
      - host: flower.$(DOMAIN)
        http:
          paths:
          - backend:
              serviceName: flower
              servicePort: 5555
  - apiVersion: v1
    kind: Service
    metadata:
      name: web
    spec:
      type: NodePort
      selector:
        app: airflow
        tier: web
      ports:
        - name: web
          port: 8080
  - apiVersion: v1
    kind: Service
    metadata:
      name: flower
    spec:
      type: NodePort
      selector:
        app: airflow
        tier: flower
      ports:
        - name: flower
          port: 5555
  - kind: Service
    apiVersion: v1
    metadata:
      name: postgres
    spec:
      type: ClusterIP
      selector:
        app: airflow
        tier: postgres
      ports:
        - name: postgres
          port: 5432
          protocol: TCP
  - kind: Service
    apiVersion: v1
    metadata:
      name: redis
    spec:
      type: ClusterIP
      selector:
        app: airflow
        tier: redis
      ports:
        - name: redis
          port: 6379
  - kind: Deployment
    apiVersion: extensions/v1beta1
    metadata:
      name: postgres
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: airflow
            tier: postgres
        spec:
          restartPolicy: Always
          containers:
            - name: cloudsql-proxy
              image: gcr.io/cloudsql-docker/gce-proxy:1.11
              command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                        "-instances=$(PROJECT_ID):us-central1:airflow-db=tcp:0.0.0.0:5432",
                        "-credential_file=/secrets/cloudsql/credentials.json"]
              ports:
                - name: postgres
                  containerPort: 5432
              volumeMounts:
                - name: cloudsql-instance-credentials
                  mountPath: /secrets/cloudsql
                  readOnly: true
                - name: ssl-certs
                  mountPath: /etc/ssl/certs
                - name: cloudsql
                  mountPath: /cloudsql
          volumes:
            - name: cloudsql-instance-credentials
              secret:
                secretName: cloudsql-instance-credentials
            - name: cloudsql
              emptyDir:
            - name: ssl-certs
              hostPath:
                path: /etc/ssl/certs
  - kind: Deployment
    apiVersion: extensions/v1beta1
    metadata:
      name: redis
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: airflow
            tier: redis
        spec:
          restartPolicy: Always
          containers:
            - name: redis
              image: redis:3.0-alpine
              ports:
                - name: redis
                  containerPort: 6379
              volumeMounts:
                - name: redis-disk
                  mountPath: /data/redis
          volumes:
            - name: redis-disk
              gcePersistentDisk:
                pdName: airflow-redis-disk
                fsType: ext4
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: web
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: airflow
            tier: web
        spec:
          restartPolicy: Always
          containers:
            - name: web
              image: gcr.io/$(PROJECT_ID)/airflow-gke:latest
              ports:
                - name: web
                  containerPort: 8080
              volumeMounts:
              - name: dagbag
                mountPath: /git
              envFrom:
              - configMapRef:
                  name: config-airflow
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 60
                timeoutSeconds: 30
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 60
                timeoutSeconds: 30
              command: ["/entrypoint.sh"]
              args:  ["webserver"]
            - name: git-sync
              image: gcr.io/google_containers/git-sync:v2.0.4
              volumeMounts:
              - name: dagbag
                mountPath: /git
              envFrom:
              - configMapRef:
                  name: config-git-sync
          volumes:
            - name: dagbag
              emptyDir: {}
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: scheduler
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: airflow
            tier: scheduler
        spec:
          restartPolicy: Always
          containers:
            - name: scheduler
              image: gcr.io/$(PROJECT_ID)/airflow-gke:latest
              volumeMounts:
              - name: dagbag
                mountPath: /git
              envFrom:
              - configMapRef:
                  name: config-airflow
              command: ["/entrypoint.sh"]
              args:  ["scheduler"]
            - name: git-sync
              image: gcr.io/google_containers/git-sync:v2.0.4
              volumeMounts:
              - name: dagbag
                mountPath: /git
              envFrom:
              - configMapRef:
                  name: config-git-sync
          volumes:
            - name: dagbag
              emptyDir: {}
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: worker
    spec:
      replicas: 2
      template:
        metadata:
          labels:
            app: airflow
            tier: worker
        spec:
          restartPolicy: Always
          containers:
            - name: worker
              image: gcr.io/$(PROJECT_ID)/airflow-gke:latest
              volumeMounts:
              - name: dagbag
                mountPath: /git
              envFrom:
              - configMapRef:
                  name: config-airflow
              command: ["/entrypoint.sh"]
              args:  ["worker"]
            - name: git-sync
              image: gcr.io/google_containers/git-sync:v2.0.4
              volumeMounts:
              - name: dagbag
                mountPath: /git
              envFrom:
              - configMapRef:
                  name: config-git-sync
          volumes:
            - name: dagbag
              emptyDir: {}
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: flower
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: airflow
            tier: flower
        spec:
          restartPolicy: Always
          containers:
          - name: flower
            image: gcr.io/$(PROJECT_ID)/airflow-gke:latest
            ports:
            - name: flower
              containerPort: 5555
            envFrom:
            - configMapRef:
                name: config-airflow
            command: ["/entrypoint.sh"]
            args:  ["flower"]
